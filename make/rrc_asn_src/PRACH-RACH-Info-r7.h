/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rrc.asn1"
 */

#ifndef	_PRACH_RACH_Info_r7_H_
#define	_PRACH_RACH_Info_r7_H_


#include <asn_application.h>

/* Including external dependencies */
#include "AvailableSignatures.h"
#include "SF-PRACH.h"
#include "PreambleScramblingCodeWordNumber.h"
#include "PuncturingLimit.h"
#include "AvailableSubChannelNumbers.h"
#include <constr_SEQUENCE.h>
#include "TimeslotNumber.h"
#include "TDD-PRACH-CCodeList.h"
#include "PRACH-Midamble.h"
#include "TDD768-PRACH-CCodeList.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum modeSpecificInfo_PR {
	modeSpecificInfo_PR_NOTHING,	/* No components present */
	modeSpecificInfo_PR_fdd,
	modeSpecificInfo_PR_tdd384,
	modeSpecificInfo_PR_tdd768
} modeSpecificInfo_PR;

/* PRACH-RACH-Info-r7 */
typedef struct PRACH_RACH_Info_r7 {
	struct modeSpecificInfo {
		modeSpecificInfo_PR present;
		union PRACH_RACH_Info_r7__modeSpecificInfo_u {
			struct fdd {
				AvailableSignatures_t	 availableSignatures;
				SF_PRACH_t	 availableSF;
				PreambleScramblingCodeWordNumber_t	 preambleScramblingCodeWordNumber;
				PuncturingLimit_t	 puncturingLimit;
				AvailableSubChannelNumbers_t	 availableSubChannelNumbers;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fdd;
			struct tdd384 {
				TimeslotNumber_t	 timeslot;
				TDD_PRACH_CCodeList_t	 channelisationCodeList;
				PRACH_Midamble_t	 prach_Midamble;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd384;
			struct tdd768 {
				TimeslotNumber_t	 timeslot;
				TDD768_PRACH_CCodeList_t	 channelisationCodeList;
				PRACH_Midamble_t	 prach_Midamble;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd768;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} modeSpecificInfo;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} PRACH_RACH_Info_r7_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_PRACH_RACH_Info_r7;

#ifdef __cplusplus
}
#endif

#endif	/* _PRACH_RACH_Info_r7_H_ */
#include <asn_internal.h>
