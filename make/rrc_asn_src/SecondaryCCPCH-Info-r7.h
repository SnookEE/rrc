/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rrc.asn1"
 */

#ifndef	_SecondaryCCPCH_Info_r7_H_
#define	_SecondaryCCPCH_Info_r7_H_


#include <asn_application.h>

/* Including external dependencies */
#include "SecondaryScramblingCode.h"
#include <BOOLEAN.h>
#include "SF256-AndCodeNumber.h"
#include "PositionFixedOrFlexible.h"
#include "TimingOffset.h"
#include <constr_SEQUENCE.h>
#include "CommonTimeslotInfoSCCPCH.h"
#include "IndividualTimeslotInfo.h"
#include "SCCPCH-ChannelisationCodeList.h"
#include "IndividualTimeslotInfo-VHCR.h"
#include "SCCPCH-ChannelisationCodeList-VHCR.h"
#include "IndividualTimeslotInfo-LCR-r4.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum modeSpecificInfo_PR {
	modeSpecificInfo_PR_NOTHING,	/* No components present */
	modeSpecificInfo_PR_fdd,
	modeSpecificInfo_PR_tdd
} modeSpecificInfo_PR;
typedef enum tddOption_PR {
	tddOption_PR_NOTHING,	/* No components present */
	tddOption_PR_tdd384,
	tddOption_PR_tdd768,
	tddOption_PR_tdd128
} tddOption_PR;

/* SecondaryCCPCH-Info-r7 */
typedef struct SecondaryCCPCH_Info_r7 {
	struct modeSpecificInfo {
		modeSpecificInfo_PR present;
		union SecondaryCCPCH_Info_r7__modeSpecificInfo_u {
			struct fdd {
				SecondaryScramblingCode_t	*secondaryScramblingCode	/* OPTIONAL */;
				BOOLEAN_t	 sttd_Indicator;
				SF256_AndCodeNumber_t	 sf_AndCodeNumber;
				BOOLEAN_t	 pilotSymbolExistence;
				BOOLEAN_t	 tfci_Existence;
				PositionFixedOrFlexible_t	 positionFixedOrFlexible;
				TimingOffset_t	 timingOffset	/* DEFAULT 0 */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fdd;
			struct tdd {
				CommonTimeslotInfoSCCPCH_t	 commonTimeslotInfo;
				struct tddOption {
					tddOption_PR present;
					union SecondaryCCPCH_Info_r7__modeSpecificInfo__tdd__tddOption_u {
						struct tdd384 {
							IndividualTimeslotInfo_t	 individualTimeslotInfo;
							SCCPCH_ChannelisationCodeList_t	 channelisationCode;
							
							/* Context for parsing across buffer boundaries */
							asn_struct_ctx_t _asn_ctx;
						} tdd384;
						struct tdd768 {
							IndividualTimeslotInfo_VHCR_t	 individualTimeslotInfo;
							SCCPCH_ChannelisationCodeList_VHCR_t	 channelisationCode;
							
							/* Context for parsing across buffer boundaries */
							asn_struct_ctx_t _asn_ctx;
						} tdd768;
						struct tdd128 {
							IndividualTimeslotInfo_LCR_r4_t	 individualTimeslotInfo;
							SCCPCH_ChannelisationCodeList_t	 channelisationCode;
							
							/* Context for parsing across buffer boundaries */
							asn_struct_ctx_t _asn_ctx;
						} tdd128;
					} choice;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} tddOption;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} modeSpecificInfo;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SecondaryCCPCH_Info_r7_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SecondaryCCPCH_Info_r7;

#ifdef __cplusplus
}
#endif

#endif	/* _SecondaryCCPCH_Info_r7_H_ */
#include <asn_internal.h>
