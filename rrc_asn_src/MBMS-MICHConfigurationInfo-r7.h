/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rrc.asn1"
 */

#ifndef	_MBMS_MICHConfigurationInfo_r7_H_
#define	_MBMS_MICHConfigurationInfo_r7_H_


#include <asn_application.h>

/* Including external dependencies */
#include "MBMS-MICHPowerOffset.h"
#include "ChannelisationCode256.h"
#include "MBMS-NI-CountPerFrame.h"
#include <BOOLEAN.h>
#include <constr_SEQUENCE.h>
#include "TimeslotNumber.h"
#include "MidambleShiftAndBurstType.h"
#include "DL-TS-ChannelisationCode.h"
#include "MBMS-MICHNotificationIndLength.h"
#include "MidambleShiftAndBurstType-VHCR.h"
#include "TimeslotNumber-LCR-r4.h"
#include "MidambleShiftAndBurstType-LCR-r4.h"
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum mode_PR {
	mode_PR_NOTHING,	/* No components present */
	mode_PR_fdd,
	mode_PR_tdd384,
	mode_PR_tdd768,
	mode_PR_tdd128
} mode_PR;

/* Forward declarations */
struct RepPerLengthOffset_MICH;

/* MBMS-MICHConfigurationInfo-r7 */
typedef struct MBMS_MICHConfigurationInfo_r7 {
	MBMS_MICHPowerOffset_t	 michPowerOffset;
	struct mode {
		mode_PR present;
		union MBMS_MICHConfigurationInfo_r7__mode_u {
			struct fdd {
				ChannelisationCode256_t	 channelisationCode256;
				MBMS_NI_CountPerFrame_t	 ni_CountPerFrame;
				BOOLEAN_t	 sttd_Indicator;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} fdd;
			struct tdd384 {
				TimeslotNumber_t	 timeslot;
				MidambleShiftAndBurstType_t	 midambleShiftAndBurstType;
				DL_TS_ChannelisationCode_t	 channelisationCode;
				struct RepPerLengthOffset_MICH	*repetitionPeriodLengthOffset	/* OPTIONAL */;
				MBMS_MICHNotificationIndLength_t	 mbmsNotificationIndLength	/* DEFAULT 0 */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd384;
			struct tdd768 {
				TimeslotNumber_t	 timeslot;
				MidambleShiftAndBurstType_VHCR_t	 midambleShiftAndBurstType;
				DL_TS_ChannelisationCode_t	 channelisationCode;
				struct RepPerLengthOffset_MICH	*repetitionPeriodLengthOffset	/* OPTIONAL */;
				MBMS_MICHNotificationIndLength_t	 mbmsNotificationIndLength	/* DEFAULT 0 */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd768;
			struct tdd128 {
				TimeslotNumber_LCR_r4_t	 timeslot;
				MidambleShiftAndBurstType_LCR_r4_t	 midambleShiftAndBurstType;
				struct channelisationCodeList {
					A_SEQUENCE_OF(DL_TS_ChannelisationCode_t) list;
					
					/* Context for parsing across buffer boundaries */
					asn_struct_ctx_t _asn_ctx;
				} channelisationCodeList;
				struct RepPerLengthOffset_MICH	*repetitionPeriodLengthOffset	/* OPTIONAL */;
				MBMS_MICHNotificationIndLength_t	 mbmsNotificationIndLength	/* DEFAULT 0 */;
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} tdd128;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} mode;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MBMS_MICHConfigurationInfo_r7_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_MBMS_MICHConfigurationInfo_r7;

#ifdef __cplusplus
}
#endif

/* Referred external types */
#include "RepPerLengthOffset-MICH.h"

#endif	/* _MBMS_MICHConfigurationInfo_r7_H_ */
#include <asn_internal.h>
